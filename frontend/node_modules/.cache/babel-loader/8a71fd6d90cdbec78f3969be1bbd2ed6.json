{"ast":null,"code":"var _jsxFileName = \"/Users/atisyamsook/Desktop/js/project/frontend/src/pages/Signup.js\";\nimport React, { Component } from 'react';\nimport { Row, Col, Input, Button, Form, Tooltip, Icon } from 'antd';\nimport Axios from \"../config/axios.setup\";\nimport { signupOpenNotification, signupFailedNotification } from \"../components/Notification/SignupNotification\";\n\nclass Signup extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleDirtyBlur = e => {\n      const value = e.target.value;\n      this.setState({\n        isDirty: this.state.isDirty || !!value\n      });\n    };\n\n    this.compareToFirstPassword = (rule, value, callback) => {\n      const form = this.props.form;\n\n      if (value && value !== form.getFieldValue('password')) {\n        callback('password and confirm password is not same');\n      } else {\n        callback();\n      }\n    };\n\n    this.compareToSecondPassword = (rule, value, callback) => {\n      const form = this.props.form;\n\n      if (value && this.state.isDirty) {\n        form.validateFields([\"confirmpassword\"], {\n          force: true\n        });\n      }\n\n      callback();\n    };\n\n    this.submitFrom = e => {\n      e.preventDefault();\n      this.props.form.validateFieldsAndScroll((err, value) => {\n        console.log(err, \"outcondition\");\n        console.log(value, \"VALUE VALUE\");\n\n        if (!err) {\n          console.log(\"incomdition\");\n          Axios.post('/registerUser', {\n            username: value.username,\n            password: value.password,\n            nickName: value.nickName,\n            email: value.email\n          }).then(result => {\n            console.log(value, \"value is\");\n            signupOpenNotification();\n            console.log(result.response);\n            this.props.history.push(\"/login\");\n          }).catch(err => {\n            console.error(err.response.data.message, \"--------\");\n            signupFailedNotification(err.response.data.message);\n          });\n        } else {\n          console.log(\"ERROR\");\n        }\n      });\n    };\n\n    this.state = {\n      isDirty: false\n    };\n  }\n\n  render() {\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    return React.createElement(Row, {\n      type: \"flex\",\n      justify: \"center\",\n      align: \"middle\",\n      style: {\n        height: \"100vh\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Col, {\n      type: \"flex\",\n      justify: \"center\",\n      align: \"middle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"https://f.ptcdn.info/202/059/000/pdj96y10o03Td4WPRuk2-o.jpg\",\n      style: {\n        width: \"20%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }))), React.createElement(Form, {\n      onSubmit: this.submitFrom,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Row, {\n      gutter: [16, 24],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      label: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, getFieldDecorator(\"username\", {\n      rules: [{\n        required: true,\n        message: 'Please input your username!'\n      }]\n    })(React.createElement(\"input\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    })))), React.createElement(Row, {\n      gutter: [16, 24],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      lable: \"Password\",\n      hasFeedback: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"password:\", getFieldDecorator(\"password\", {\n      rules: [{\n        required: true,\n        message: 'Please input your password!'\n      }, {\n        validator: this.compareToSecondPassword\n      }]\n    })(React.createElement(Input.Password, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    })))), React.createElement(Row, {\n      gutter: [16, 24],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      lable: \"Confirm Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"confirm password :\", getFieldDecorator(\"confirmpassword\", {\n      rules: [{\n        required: true,\n        message: 'Please input your confirm password!'\n      }, {\n        validator: this.compareToFirstPassword\n      }]\n    })(React.createElement(Input.Password, {\n      onBlur: this.handleDirtyBlur,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    })))), React.createElement(Row, {\n      gutter: [16, 24],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      lable: \"E-mail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"E-mail:\", getFieldDecorator(\"email\", {\n      rules: [{\n        type: 'email',\n        message: 'The input is not valid E-mail!'\n      }, {\n        required: true,\n        message: 'Please input your E-mail!'\n      }]\n    })(React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    })))), React.createElement(Row, {\n      gutter: [16, 24],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"Nickname\\xA0\", React.createElement(Tooltip, {\n        title: \"What do you want others to call you?\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"question-circle-o\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, getFieldDecorator(\"name\", {\n      rules: [{\n        required: true,\n        message: 'Please input your name!',\n        whitespace: true\n      }]\n    })(React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    })))), React.createElement(Row, {\n      type: \"flex\",\n      justify: \"center\",\n      align: \"middle\",\n      style: {\n        margin: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"Signup\")))))));\n  }\n\n}\n\nexport default Form.create()(Signup);","map":{"version":3,"sources":["/Users/atisyamsook/Desktop/js/project/frontend/src/pages/Signup.js"],"names":["React","Component","Row","Col","Input","Button","Form","Tooltip","Icon","Axios","signupOpenNotification","signupFailedNotification","Signup","constructor","props","handleDirtyBlur","e","value","target","setState","isDirty","state","compareToFirstPassword","rule","callback","form","getFieldValue","compareToSecondPassword","validateFields","force","submitFrom","preventDefault","validateFieldsAndScroll","err","console","log","post","username","password","nickName","email","then","result","response","history","push","catch","error","data","message","render","getFieldDecorator","height","width","rules","required","validator","type","whitespace","margin","create"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Row, Col, Input, Button, Form, Tooltip, Icon } from 'antd';\nimport Axios from \"../config/axios.setup\"\nimport { signupOpenNotification, signupFailedNotification } from \"../components/Notification/SignupNotification\"\n\nclass Signup extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      isDirty: false,\n    }\n  }\n  handleDirtyBlur = e => {\n    const { value } = e.target\n    this.setState({ isDirty: this.state.isDirty || !!value })\n  }\n\n\n  compareToFirstPassword = (rule, value, callback) => {\n    const { form } = this.props\n    if (value && value !== form.getFieldValue('password')) {\n      callback('password and confirm password is not same')\n    } else {\n      callback()\n    }\n  }\n  compareToSecondPassword = (rule, value, callback) => {\n    const { form } = this.props\n    if (value && this.state.isDirty) {\n      form.validateFields([\"confirmpassword\"], { force: true })\n    }\n    callback()\n\n  }\n\n  submitFrom = (e) => {\n    e.preventDefault();\n    this.props.form.validateFieldsAndScroll((err, value) => {\n      console.log(err, \"outcondition\")\n      console.log(value, \"VALUE VALUE\")\n      if (!err) {\n        console.log(\"incomdition\")\n        Axios.post('/registerUser', {\n          username: value.username,\n          password: value.password,\n          nickName: value.nickName,\n          email: value.email\n        })\n          .then(result => {\n            console.log(value, \"value is\")\n            signupOpenNotification()\n            console.log(result.response)\n            this.props.history.push(\"/login\")\n          })\n          .catch(err => {\n            console.error(err.response.data.message, \"--------\")\n            signupFailedNotification(err.response.data.message)\n          })\n      } else {\n        console.log(\"ERROR\")\n      }\n    })\n  }\n\n  render() {\n    const { getFieldDecorator } = this.props.form\n    return (\n      <Row type=\"flex\" justify=\"center\" align=\"middle\" style={{ height: \"100vh\" }}>\n        <Col>\n          <Row  >\n            <Col type=\"flex\" justify=\"center\" align=\"middle\">\n              <img src=\"https://f.ptcdn.info/202/059/000/pdj96y10o03Td4WPRuk2-o.jpg\" style={{ width: \"20%\" }} />\n            </Col>\n          </Row>\n\n          <Form onSubmit={this.submitFrom} >\n            <Row gutter={[16, 24]}>\n              <Form.Item label=\"username\">\n                {getFieldDecorator(\"username\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: 'Please input your username!',\n                    }\n                  ]\n                })(<input />)}\n              </Form.Item>\n            </Row>\n\n            <Row gutter={[16, 24]}>\n              <Form.Item lable=\"Password\" hasFeedback>password:\n                    {getFieldDecorator(\"password\", {\n                rules: [\n                  {\n                    required: true,\n                    message: 'Please input your password!',\n                  },\n                  {\n                    validator: this.compareToSecondPassword\n                  }\n                ]\n              })(<Input.Password />)}\n              </Form.Item>\n            </Row>\n\n            <Row gutter={[16, 24]}>\n              <Form.Item lable=\"Confirm Password\" >confirm password :\n                    {getFieldDecorator(\"confirmpassword\", {\n                rules: [\n                  {\n                    required: true,\n                    message: 'Please input your confirm password!',\n                  },\n                  {\n                    validator: this.compareToFirstPassword,\n                  }\n                ]\n              })(<Input.Password onBlur={this.handleDirtyBlur} />)}\n              </Form.Item>\n            </Row>\n\n            <Row gutter={[16, 24]}>\n              <Form.Item lable=\"E-mail\">E-mail:\n                    {getFieldDecorator(\"email\", {\n                rules: [\n                  {\n                    type: 'email',\n                    message: 'The input is not valid E-mail!',\n                  },\n                  {\n                    required: true,\n                    message: 'Please input your E-mail!',\n                  },\n                ],\n              })(<Input />)}\n              </Form.Item>\n            </Row>\n\n            <Row gutter={[16, 24]}>\n              <Form.Item\n                label={\n                  <span>\n                    Nickname&nbsp;\n              <Tooltip title=\"What do you want others to call you?\">\n                      <Icon type=\"question-circle-o\" />\n                    </Tooltip>\n                  </span>}>\n                {getFieldDecorator(\"name\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: 'Please input your name!',\n                      whitespace: true\n                    }\n                  ]\n                })(<Input />)}\n              </Form.Item>\n            </Row>\n            <Row type=\"flex\" justify=\"center\" align=\"middle\" style={{ margin: \"10px\" }} >\n              <Col>\n                <Form.Item>\n                  <Button type=\"primary\" htmlType=\"submit\" >Signup</Button>\n                </Form.Item>\n              </Col>\n            </Row>\n          </Form>\n\n        </Col>\n      </Row>\n    )\n  }\n}\n\nexport default Form.create()(Signup)"]},"metadata":{},"sourceType":"module"}