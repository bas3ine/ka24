{"ast":null,"code":"var _jsxFileName = \"/Users/atisyamsook/Desktop/js/project/frontend/src/pages/Signup.js\";\nimport React, { Component } from 'react';\nimport { Row, Col, Input, Button, Form } from 'antd';\nimport Axios from \"../config/axios.setup\";\nimport { signupOpenNotification, signupFailedNotification } from \"../components/Notification/SignupNotification\";\n\nclass Signup extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleDirtyBlur = e => {\n      const value = e.target.value;\n      this.setState({\n        isDirty: this.state.isDirty || !!value\n      });\n    };\n\n    this.compareToFirstPassword = (rule, value, callback) => {\n      const form = this.props.form;\n\n      if (value && value !== form.getFieldValue('password')) {\n        callback('password and confirm password is not same');\n      } else {\n        callback();\n      }\n    };\n\n    this.compareToSecondPassword = (rule, value, callback) => {\n      const form = this.props.form;\n\n      if (value && this.state.isDirty) {\n        form.validateFields([\"confirmpassword\"], {\n          force: true\n        });\n      }\n\n      callback();\n    };\n\n    this.submitFrom = e => {\n      e.preventDefault();\n      this.props.form.validateFieldsAndScroll((err, value) => {\n        if (!err) {\n          Axios.post('/registerUser', {\n            username: value.username,\n            password: value.password,\n            name: value.name,\n            email: value.email\n          }).then(result => {\n            console.log(value);\n            this.props.history.push(\"/login\");\n          }).catch(err => {\n            console.error(err);\n          });\n        }\n      });\n    };\n\n    this.state = {\n      isDirty: false\n    };\n  }\n\n  render() {\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    return React.createElement(Row, {\n      type: \"flex\",\n      justify: \"center\",\n      align: \"middle\",\n      style: {\n        height: \"100vh\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Col, {\n      type: \"flex\",\n      justify: \"center\",\n      align: \"middle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"https://f.ptcdn.info/202/059/000/pdj96y10o03Td4WPRuk2-o.jpg\",\n      style: {\n        width: \"20%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }))), React.createElement(Form, {\n      onSubmit: this.submitFrom,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Row, {\n      gutter: [16, 24],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"username :\", getFieldDecorator(\"username\", {\n      rules: [{\n        required: true,\n        message: 'Please input your username!'\n      }]\n    })(React.createElement(\"input\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }))))), React.createElement(Row, {\n      gutter: [16, 24],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      lable: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"password :\", getFieldDecorator(\"password\", {\n      rules: [{\n        required: true,\n        message: 'Please input your password!'\n      }, {\n        validator: this.compareToSecondPassword\n      }]\n    })(React.createElement(Input.Password, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }))))), React.createElement(Row, {\n      gutter: [16, 24],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      lable: \"confirmpassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"confirm password :\", getFieldDecorator(\"confirmpassword\", {\n      rules: [{\n        required: true,\n        message: 'Please input your confirm password!'\n      }, {\n        validator: this.compareToFirstPassword\n      }]\n    })(React.createElement(Input.Password, {\n      onBlur: this.handleDirtyBlur,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }))))), React.createElement(Row, {\n      gutter: [16, 24],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      lable: \"E-mail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"E-mail:\", getFieldDecorator(\"email\", {\n      rules: [{\n        type: 'email',\n        message: 'The input is not valid E-mail!'\n      }, {\n        required: true,\n        message: 'Please input your E-mail!'\n      }]\n    })(React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }))))), React.createElement(Row, {\n      gutter: [16, 24],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      lable: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"name :\", getFieldDecorator(\"name\", {\n      rules: [{\n        required: true,\n        message: 'Please input your name!'\n      }]\n    })(React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }))))), React.createElement(Row, {\n      type: \"flex\",\n      justify: \"center\",\n      align: \"middle\",\n      style: {\n        margin: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \"Signup\")))))));\n  }\n\n}\n\nexport default Form.create()(Signup);","map":{"version":3,"sources":["/Users/atisyamsook/Desktop/js/project/frontend/src/pages/Signup.js"],"names":["React","Component","Row","Col","Input","Button","Form","Axios","signupOpenNotification","signupFailedNotification","Signup","constructor","props","handleDirtyBlur","e","value","target","setState","isDirty","state","compareToFirstPassword","rule","callback","form","getFieldValue","compareToSecondPassword","validateFields","force","submitFrom","preventDefault","validateFieldsAndScroll","err","post","username","password","name","email","then","result","console","log","history","push","catch","error","render","getFieldDecorator","height","width","rules","required","message","validator","type","margin","create"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Row, Col,Input,Button,Form } from 'antd';\nimport Axios from \"../config/axios.setup\"\nimport { signupOpenNotification,signupFailedNotification} from \"../components/Notification/SignupNotification\"\n\nclass Signup extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n          isDirty: false,\n        }\n      }\n      handleDirtyBlur = e => {\n        const {value}=e.target\n        this.setState({ isDirty:this.state.isDirty || !!value})\n      }\n\n\n      compareToFirstPassword = (rule,value,callback) =>{\n        const {form} = this.props\n        if(value && value !== form.getFieldValue('password')) {\n          callback('password and confirm password is not same')\n        } else {\n          callback()\n        }\n      }\n      compareToSecondPassword = (rule,value,callback) =>{\n        const {form} = this.props\n        if(value && this.state.isDirty) {\n          form.validateFields([\"confirmpassword\"],{force:true})\n        } \n          callback()\n        \n      }\n\n      submitFrom =(e) => {\n        e.preventDefault();\n        this.props.form.validateFieldsAndScroll((err,value)=>{\n          if(!err){\n            Axios.post('/registerUser',{\n              username:value.username,\n              password:value.password,\n              name:value.name,\n              email:value.email\n            })\n            .then(result =>{\n              console.log(value)\n              this.props.history.push(\"/login\")\n            })\n            .catch(err =>{\n              console.error(err)\n            })\n          }\n        })\n      }\n\n    render() {\n        const{getFieldDecorator} =this.props.form\n        return (\n<Row type = \"flex\" justify=\"center\" align=\"middle\" style ={{height:\"100vh\"}}>\n    <Col>\n<Row  >\n<Col type = \"flex\" justify=\"center\" align=\"middle\">\n<img src =\"https://f.ptcdn.info/202/059/000/pdj96y10o03Td4WPRuk2-o.jpg\" style ={{width:\"20%\"}}  />\n</Col>\n</Row>\n\n<Form onSubmit={this.submitFrom} >\n<Row gutter={[16, 24]}>\n    <Col>\n<Form.Item>username : \n                    {getFieldDecorator(\"username\",{\n                      rules:[\n                              { \n                                required: true, \n                                message: 'Please input your username!', \n                              }\n                      ]\n                    })(<input />)}\n                  </Form.Item>\n                  </Col>\n</Row>\n\n<Row gutter={[16, 24]}>\n    <Col>\n<Form.Item lable=\"password\">password :\n                    {getFieldDecorator(\"password\",{\n                      rules:[\n                              { \n                                required: true, \n                                message: 'Please input your password!', \n                              },\n                              {\n                                validator: this.compareToSecondPassword\n                              }\n                      ]\n                    })(<Input.Password />)}\n                  </Form.Item>\n                  </Col>\n</Row>\n\n<Row gutter={[16, 24]}>\n    <Col>\n<Form.Item lable=\"confirmpassword\" >confirm password :\n                    {getFieldDecorator(\"confirmpassword\",{\n                        rules:[\n                            { \n                                required: true, \n                                message: 'Please input your confirm password!', \n                            },\n                            {\n                                validator:this.compareToFirstPassword,\n                            }\n                        ]\n                    })(<Input.Password onBlur={this.handleDirtyBlur} />)}\n                  </Form.Item>\n                    </Col>\n</Row>\n\n<Row gutter={[16, 24]}>\n    <Col>\n<Form.Item lable=\"E-mail\">E-mail: \n                    {getFieldDecorator(\"email\",{\n            rules: [\n                {\n                  type: 'email',\n                  message: 'The input is not valid E-mail!',\n                },\n                {\n                  required: true,\n                  message: 'Please input your E-mail!',\n                },\n              ],\n                    })(<Input />)}\n                  </Form.Item>\n                    </Col>\n</Row>\n\n<Row gutter={[16, 24]}>\n    <Col>\n<Form.Item lable=\"name\">name :\n                    {getFieldDecorator(\"name\",{\n                        rules:[\n                            { \n                                required: true, \n                                message: 'Please input your name!', \n                            }\n                        ]\n                    })(<Input />)}\n                  </Form.Item>\n                    </Col>\n</Row>\n<Row type = \"flex\" justify=\"center\" align=\"middle\" style={{margin:\"10px\"}} >\n<Col>\n<Form.Item>\n<Button type=\"primary\" htmlType=\"submit\" >Signup</Button>\n</Form.Item>\n</Col>\n</Row>\n</Form>\n\n    </Col>\n</Row>\n        )\n    }\n}\n\nexport default Form.create()(Signup)"]},"metadata":{},"sourceType":"module"}